# ===================================================================
# SERVER PORT
# ===================================================================
# Es importante que este microservicio se ejecute en un puerto diferente
# al del Microservicio de Productos si ambos corren en la misma máquina.
# Si el de Productos usa 8080 (por defecto), puedes usar 8081 para este.
server.port=8081

# ===================================================================
# DATASOURCE (MySQL Connection for Inventory Microservice)
# ===================================================================
# Reemplaza 'inventario_db', 'tu_usuario_inventario' y 'tu_contraseña_inventario'
# con los valores reales para la base de datos de este microservicio.
spring.datasource.url=jdbc:mysql://localhost:3306/inventario_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=tu_usuario_inventario
spring.datasource.password=tu_contraseña_inventario
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================================================
# JPA / HIBERNATE
# ===================================================================
# spring.jpa.hibernate.ddl-auto: Controla la generación del esquema.
#   validate: Valida el esquema, no hace cambios. Bueno si ya tienes las tablas creadas.
#   update: Actualiza el esquema. Conveniente para desarrollo.
#   none: No hace nada. Recomendado para producción si gestionas el esquema manualmente.
#   create: Crea el esquema, borrando datos previos. Solo para desarrollo.
#   create-drop: Crea y borra el esquema. Solo para desarrollo/pruebas.
# Para empezar, 'update' o 'validate' (si ya creaste la tabla 'inventario') son buenas opciones.
spring.jpa.hibernate.ddl-auto=update

# Muestra las consultas SQL generadas por Hibernate en la consola
spring.jpa.show-sql=true

# Formatea el SQL mostrado para mayor legibilidad
spring.jpa.properties.hibernate.format_sql=true

# Dialecto de Hibernate para MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# ===================================================================
# APPLICATION NAME (Opcional, útil para logs y Spring Boot Admin)
# ===================================================================
spring.application.name=inventario-service